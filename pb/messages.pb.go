// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: messages.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TcpConnState int32

const (
	TcpConnState_INIT       TcpConnState = 0
	TcpConnState_SYN_RECV   TcpConnState = 1
	TcpConnState_EST        TcpConnState = 2
	TcpConnState_FIN_WAIT_1 TcpConnState = 3
	TcpConnState_FIN_WAIT_2 TcpConnState = 4
	TcpConnState_CLOSE_WAIT TcpConnState = 5
	TcpConnState_CLOSING    TcpConnState = 6
	TcpConnState_LAST_ACK   TcpConnState = 7
	TcpConnState_TIME_WAIT  TcpConnState = 8
	TcpConnState_CLOSED     TcpConnState = 9
)

// Enum value maps for TcpConnState.
var (
	TcpConnState_name = map[int32]string{
		0: "INIT",
		1: "SYN_RECV",
		2: "EST",
		3: "FIN_WAIT_1",
		4: "FIN_WAIT_2",
		5: "CLOSE_WAIT",
		6: "CLOSING",
		7: "LAST_ACK",
		8: "TIME_WAIT",
		9: "CLOSED",
	}
	TcpConnState_value = map[string]int32{
		"INIT":       0,
		"SYN_RECV":   1,
		"EST":        2,
		"FIN_WAIT_1": 3,
		"FIN_WAIT_2": 4,
		"CLOSE_WAIT": 5,
		"CLOSING":    6,
		"LAST_ACK":   7,
		"TIME_WAIT":  8,
		"CLOSED":     9,
	}
)

func (x TcpConnState) Enum() *TcpConnState {
	p := new(TcpConnState)
	*p = x
	return p
}

func (x TcpConnState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TcpConnState) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[0].Descriptor()
}

func (TcpConnState) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[0]
}

func (x TcpConnState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TcpConnState.Descriptor instead.
func (TcpConnState) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

type StreamKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteAddr []byte `protobuf:"bytes,1,opt,name=remote_addr,json=remoteAddr,proto3" json:"remote_addr,omitempty"`
	RemotePort uint32 `protobuf:"varint,2,opt,name=remote_port,json=remotePort,proto3" json:"remote_port,omitempty"`
	LocalPort  uint32 `protobuf:"varint,3,opt,name=local_port,json=localPort,proto3" json:"local_port,omitempty"`
}

func (x *StreamKey) Reset() {
	*x = StreamKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamKey) ProtoMessage() {}

func (x *StreamKey) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamKey.ProtoReflect.Descriptor instead.
func (*StreamKey) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

func (x *StreamKey) GetRemoteAddr() []byte {
	if x != nil {
		return x.RemoteAddr
	}
	return nil
}

func (x *StreamKey) GetRemotePort() uint32 {
	if x != nil {
		return x.RemotePort
	}
	return 0
}

func (x *StreamKey) GetLocalPort() uint32 {
	if x != nil {
		return x.LocalPort
	}
	return 0
}

type BufferStateUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sequence number of the first byte of un-ack'd/unread data in the buffer.
	StartSeq uint64 `protobuf:"varint,1,opt,name=start_seq,json=startSeq,proto3" json:"start_seq,omitempty"`
	BufLen   uint32 `protobuf:"varint,2,opt,name=buf_len,json=bufLen,proto3" json:"buf_len,omitempty"`
	// Sequence number to append data at.
	AppendSeq  uint64 `protobuf:"varint,3,opt,name=append_seq,json=appendSeq,proto3" json:"append_seq,omitempty"`
	AppendData []byte `protobuf:"bytes,4,opt,name=append_data,json=appendData,proto3" json:"append_data,omitempty"`
}

func (x *BufferStateUpdate) Reset() {
	*x = BufferStateUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BufferStateUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BufferStateUpdate) ProtoMessage() {}

func (x *BufferStateUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BufferStateUpdate.ProtoReflect.Descriptor instead.
func (*BufferStateUpdate) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

func (x *BufferStateUpdate) GetStartSeq() uint64 {
	if x != nil {
		return x.StartSeq
	}
	return 0
}

func (x *BufferStateUpdate) GetBufLen() uint32 {
	if x != nil {
		return x.BufLen
	}
	return 0
}

func (x *BufferStateUpdate) GetAppendSeq() uint64 {
	if x != nil {
		return x.AppendSeq
	}
	return 0
}

func (x *BufferStateUpdate) GetAppendData() []byte {
	if x != nil {
		return x.AppendData
	}
	return nil
}

type SyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Message ID. Expect a reply to have the same ID.
	MsgId uint64 `protobuf:"varint,1,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	// 3-tuple key which identifies this stream.
	Key *StreamKey `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Connection state to update. If this is INIT, it should be ignored.
	State TcpConnState `protobuf:"varint,3,opt,name=state,proto3,enum=pb.TcpConnState" json:"state,omitempty"`
	// Buffer state update of the send buffer
	SendBufUpdate *BufferStateUpdate `protobuf:"bytes,8,opt,name=send_buf_update,json=sendBufUpdate,proto3" json:"send_buf_update,omitempty"`
	// Buffer state update of the recv buffer
	RecvBufUpdate *BufferStateUpdate `protobuf:"bytes,12,opt,name=recv_buf_update,json=recvBufUpdate,proto3" json:"recv_buf_update,omitempty"`
}

func (x *SyncRequest) Reset() {
	*x = SyncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncRequest) ProtoMessage() {}

func (x *SyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncRequest.ProtoReflect.Descriptor instead.
func (*SyncRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{2}
}

func (x *SyncRequest) GetMsgId() uint64 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

func (x *SyncRequest) GetKey() *StreamKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *SyncRequest) GetState() TcpConnState {
	if x != nil {
		return x.State
	}
	return TcpConnState_INIT
}

func (x *SyncRequest) GetSendBufUpdate() *BufferStateUpdate {
	if x != nil {
		return x.SendBufUpdate
	}
	return nil
}

func (x *SyncRequest) GetRecvBufUpdate() *BufferStateUpdate {
	if x != nil {
		return x.RecvBufUpdate
	}
	return nil
}

type SyncReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Message ID. Matches the request ID.
	MsgId uint64 `protobuf:"varint,1,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	// Synced connection state. If this is INIT, it should be ignored.
	State TcpConnState `protobuf:"varint,3,opt,name=state,proto3,enum=pb.TcpConnState" json:"state,omitempty"`
	// Buffer state update of the send buffer
	SendBufUpdate *BufferStateUpdate `protobuf:"bytes,8,opt,name=send_buf_update,json=sendBufUpdate,proto3" json:"send_buf_update,omitempty"`
	// Buffer state update of the recv buffer
	RecvBufUpdate *BufferStateUpdate `protobuf:"bytes,12,opt,name=recv_buf_update,json=recvBufUpdate,proto3" json:"recv_buf_update,omitempty"`
}

func (x *SyncReply) Reset() {
	*x = SyncReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncReply) ProtoMessage() {}

func (x *SyncReply) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncReply.ProtoReflect.Descriptor instead.
func (*SyncReply) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{3}
}

func (x *SyncReply) GetMsgId() uint64 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

func (x *SyncReply) GetState() TcpConnState {
	if x != nil {
		return x.State
	}
	return TcpConnState_INIT
}

func (x *SyncReply) GetSendBufUpdate() *BufferStateUpdate {
	if x != nil {
		return x.SendBufUpdate
	}
	return nil
}

func (x *SyncReply) GetRecvBufUpdate() *BufferStateUpdate {
	if x != nil {
		return x.RecvBufUpdate
	}
	return nil
}

var File_messages_proto protoreflect.FileDescriptor

var file_messages_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x70, 0x62, 0x22, 0x6c, 0x0a, 0x09, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4b, 0x65,
	0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x50,
	0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x6f,
	0x72, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x11, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x53, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x75, 0x66, 0x5f, 0x6c, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x75, 0x66, 0x4c, 0x65, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x71, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0xeb,
	0x01, 0x0a, 0x0b, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4b, 0x65,
	0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x63, 0x70, 0x43, 0x6f,
	0x6e, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3d,
	0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x75, 0x66, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0d,
	0x73, 0x65, 0x6e, 0x64, 0x42, 0x75, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a,
	0x0f, 0x72, 0x65, 0x63, 0x76, 0x5f, 0x62, 0x75, 0x66, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x72,
	0x65, 0x63, 0x76, 0x42, 0x75, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0xc8, 0x01, 0x0a,
	0x09, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x63, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x0f, 0x73, 0x65, 0x6e,
	0x64, 0x5f, 0x62, 0x75, 0x66, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x42,
	0x75, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x76,
	0x5f, 0x62, 0x75, 0x66, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x76, 0x42, 0x75,
	0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2a, 0x95, 0x01, 0x0a, 0x0c, 0x54, 0x63, 0x70, 0x43,
	0x6f, 0x6e, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x49, 0x54,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x59, 0x4e, 0x5f, 0x52, 0x45, 0x43, 0x56, 0x10, 0x01,
	0x12, 0x07, 0x0a, 0x03, 0x45, 0x53, 0x54, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x49, 0x4e,
	0x5f, 0x57, 0x41, 0x49, 0x54, 0x5f, 0x31, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x49, 0x4e,
	0x5f, 0x57, 0x41, 0x49, 0x54, 0x5f, 0x32, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4c, 0x4f,
	0x53, 0x45, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4c, 0x4f,
	0x53, 0x49, 0x4e, 0x47, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x41, 0x53, 0x54, 0x5f, 0x41,
	0x43, 0x4b, 0x10, 0x07, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x57, 0x41, 0x49,
	0x54, 0x10, 0x08, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x09, 0x42,
	0x1d, 0x5a, 0x1b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6b,
	0x6d, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x66, 0x74, 0x63, 0x70, 0x2f, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_messages_proto_rawDescOnce sync.Once
	file_messages_proto_rawDescData = file_messages_proto_rawDesc
)

func file_messages_proto_rawDescGZIP() []byte {
	file_messages_proto_rawDescOnce.Do(func() {
		file_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_proto_rawDescData)
	})
	return file_messages_proto_rawDescData
}

var file_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_messages_proto_goTypes = []interface{}{
	(TcpConnState)(0),         // 0: pb.TcpConnState
	(*StreamKey)(nil),         // 1: pb.StreamKey
	(*BufferStateUpdate)(nil), // 2: pb.BufferStateUpdate
	(*SyncRequest)(nil),       // 3: pb.SyncRequest
	(*SyncReply)(nil),         // 4: pb.SyncReply
}
var file_messages_proto_depIdxs = []int32{
	1, // 0: pb.SyncRequest.key:type_name -> pb.StreamKey
	0, // 1: pb.SyncRequest.state:type_name -> pb.TcpConnState
	2, // 2: pb.SyncRequest.send_buf_update:type_name -> pb.BufferStateUpdate
	2, // 3: pb.SyncRequest.recv_buf_update:type_name -> pb.BufferStateUpdate
	0, // 4: pb.SyncReply.state:type_name -> pb.TcpConnState
	2, // 5: pb.SyncReply.send_buf_update:type_name -> pb.BufferStateUpdate
	2, // 6: pb.SyncReply.recv_buf_update:type_name -> pb.BufferStateUpdate
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_messages_proto_init() }
func file_messages_proto_init() {
	if File_messages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BufferStateUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_proto_goTypes,
		DependencyIndexes: file_messages_proto_depIdxs,
		EnumInfos:         file_messages_proto_enumTypes,
		MessageInfos:      file_messages_proto_msgTypes,
	}.Build()
	File_messages_proto = out.File
	file_messages_proto_rawDesc = nil
	file_messages_proto_goTypes = nil
	file_messages_proto_depIdxs = nil
}
