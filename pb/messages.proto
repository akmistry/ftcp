syntax = "proto3";
package pb;

option go_package = "github.com/akmistry/ftcp/pb";

message StreamKey {
  bytes remote_addr = 1;
  uint32 remote_port = 2;
  uint32 local_port = 3;
}

enum TcpConnState {
  INIT = 0;
  SYN_RECV = 1;
  EST = 2;
  FIN_WAIT_1 = 3;
  FIN_WAIT_2 = 4;
  CLOSE_WAIT = 5;
  CLOSING = 6;
  LAST_ACK = 7;
  TIME_WAIT = 8;
  CLOSED = 9;
}

message BufferStateUpdate {
  // Sequence number of the first byte of un-ack'd/unread data in the buffer.
  uint64 start_seq = 1;
  uint32 buf_len = 2;

  // Sequence number to append data at.
  uint64 append_seq = 3;
  bytes append_data = 4;
}

message SyncRequest {
  // Message ID. Expect a reply to have the same ID.
  uint64 msg_id = 1;

  // 3-tuple key which identifies this stream.
  StreamKey key = 2;

  // Connection state to update. If this is INIT, it should be ignored.
  TcpConnState state = 3;

  // Buffer state update of the send buffer
  BufferStateUpdate send_buf_update = 8;

  // Buffer state update of the recv buffer
  BufferStateUpdate recv_buf_update = 12;
}

message SyncReply {
  // Message ID. Matches the request ID.
  uint64 msg_id = 1;

  // Synced connection state. If this is INIT, it should be ignored.
  TcpConnState state = 3;

  // Buffer state update of the send buffer
  BufferStateUpdate send_buf_update = 8;

  // Buffer state update of the recv buffer
  BufferStateUpdate recv_buf_update = 12;
}
